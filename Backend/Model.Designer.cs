//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Lawspot.Backend", "FK_Lawyer_SpecialisationCategoryId", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Lawspot.Backend.Category), "Lawyer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lawspot.Backend.Lawyer), true)]
[assembly: EdmRelationshipAttribute("Lawspot.Backend", "FK_Question_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Lawspot.Backend.Category), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lawspot.Backend.Question), true)]
[assembly: EdmRelationshipAttribute("Lawspot.Backend", "FK_Lawyer_UserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Lawspot.Backend.User), "Lawyer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lawspot.Backend.Lawyer), true)]
[assembly: EdmRelationshipAttribute("Lawspot.Backend", "FK_Question_CreatedByUserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Lawspot.Backend.User), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lawspot.Backend.Question), true)]
[assembly: EdmRelationshipAttribute("Lawspot.Backend", "FK_User_Region", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Lawspot.Backend.Region), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lawspot.Backend.User), true)]

#endregion

namespace Lawspot.Backend
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataEntities2 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataEntities2 object using the connection string found in the 'DataEntities2' section of the application configuration file.
        /// </summary>
        public DataEntities2() : base("name=DataEntities2", "DataEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataEntities2 object.
        /// </summary>
        public DataEntities2(string connectionString) : base(connectionString, "DataEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataEntities2 object.
        /// </summary>
        public DataEntities2(EntityConnection connection) : base(connection, "DataEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Answer> Answers
        {
            get
            {
                if ((_Answers == null))
                {
                    _Answers = base.CreateObjectSet<Answer>("Answers");
                }
                return _Answers;
            }
        }
        private ObjectSet<Answer> _Answers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lawyer> Lawyers
        {
            get
            {
                if ((_Lawyers == null))
                {
                    _Lawyers = base.CreateObjectSet<Lawyer>("Lawyers");
                }
                return _Lawyers;
            }
        }
        private ObjectSet<Lawyer> _Lawyers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Question> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Answers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnswers(Answer answer)
        {
            base.AddObject("Answers", answer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lawyers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLawyers(Lawyer lawyer)
        {
            base.AddObject("Lawyers", lawyer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Lawspot.Backend", Name="Answer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Answer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Answer object.
        /// </summary>
        /// <param name="answerId">Initial value of the AnswerId property.</param>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="details">Initial value of the Details property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static Answer CreateAnswer(global::System.Int32 answerId, global::System.Int32 questionId, global::System.String details, global::System.DateTime createdOn, global::System.Int32 createdByUserId)
        {
            Answer answer = new Answer();
            answer.AnswerId = answerId;
            answer.QuestionId = questionId;
            answer.Details = details;
            answer.CreatedOn = createdOn;
            answer.CreatedByUserId = createdByUserId;
            return answer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnswerId
        {
            get
            {
                return _AnswerId;
            }
            set
            {
                if (_AnswerId != value)
                {
                    OnAnswerIdChanging(value);
                    ReportPropertyChanging("AnswerId");
                    _AnswerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AnswerId");
                    OnAnswerIdChanged();
                }
            }
        }
        private global::System.Int32 _AnswerId;
        partial void OnAnswerIdChanging(global::System.Int32 value);
        partial void OnAnswerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                OnQuestionIdChanging(value);
                ReportPropertyChanging("QuestionId");
                _QuestionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionId");
                OnQuestionIdChanged();
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Lawspot.Backend", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.String name)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_Lawyer_SpecialisationCategoryId", "Lawyer")]
        public EntityCollection<Lawyer> Lawyers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lawyer>("Lawspot.Backend.FK_Lawyer_SpecialisationCategoryId", "Lawyer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lawyer>("Lawspot.Backend.FK_Lawyer_SpecialisationCategoryId", "Lawyer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_Question_Category", "Question")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("Lawspot.Backend.FK_Question_Category", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("Lawspot.Backend.FK_Question_Category", "Question", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Lawspot.Backend", Name="Lawyer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lawyer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lawyer object.
        /// </summary>
        /// <param name="lawyerId">Initial value of the LawyerId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="practisingCertNumber">Initial value of the PractisingCertNumber property.</param>
        /// <param name="yearOfAdmission">Initial value of the YearOfAdmission property.</param>
        public static Lawyer CreateLawyer(global::System.Int32 lawyerId, global::System.Int32 userId, global::System.String firstName, global::System.String lastName, global::System.Int64 practisingCertNumber, global::System.Int32 yearOfAdmission)
        {
            Lawyer lawyer = new Lawyer();
            lawyer.LawyerId = lawyerId;
            lawyer.UserId = userId;
            lawyer.FirstName = firstName;
            lawyer.LastName = lastName;
            lawyer.PractisingCertNumber = practisingCertNumber;
            lawyer.YearOfAdmission = yearOfAdmission;
            return lawyer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LawyerId
        {
            get
            {
                return _LawyerId;
            }
            set
            {
                if (_LawyerId != value)
                {
                    OnLawyerIdChanging(value);
                    ReportPropertyChanging("LawyerId");
                    _LawyerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LawyerId");
                    OnLawyerIdChanged();
                }
            }
        }
        private global::System.Int32 _LawyerId;
        partial void OnLawyerIdChanging(global::System.Int32 value);
        partial void OnLawyerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PractisingCertNumber
        {
            get
            {
                return _PractisingCertNumber;
            }
            set
            {
                OnPractisingCertNumberChanging(value);
                ReportPropertyChanging("PractisingCertNumber");
                _PractisingCertNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PractisingCertNumber");
                OnPractisingCertNumberChanged();
            }
        }
        private global::System.Int64 _PractisingCertNumber;
        partial void OnPractisingCertNumberChanging(global::System.Int64 value);
        partial void OnPractisingCertNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpecialisationCategoryId
        {
            get
            {
                return _SpecialisationCategoryId;
            }
            set
            {
                OnSpecialisationCategoryIdChanging(value);
                ReportPropertyChanging("SpecialisationCategoryId");
                _SpecialisationCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialisationCategoryId");
                OnSpecialisationCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SpecialisationCategoryId;
        partial void OnSpecialisationCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnSpecialisationCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirmName
        {
            get
            {
                return _FirmName;
            }
            set
            {
                OnFirmNameChanging(value);
                ReportPropertyChanging("FirmName");
                _FirmName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirmName");
                OnFirmNameChanged();
            }
        }
        private global::System.String _FirmName;
        partial void OnFirmNameChanging(global::System.String value);
        partial void OnFirmNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearOfAdmission
        {
            get
            {
                return _YearOfAdmission;
            }
            set
            {
                OnYearOfAdmissionChanging(value);
                ReportPropertyChanging("YearOfAdmission");
                _YearOfAdmission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearOfAdmission");
                OnYearOfAdmissionChanged();
            }
        }
        private global::System.Int32 _YearOfAdmission;
        partial void OnYearOfAdmissionChanging(global::System.Int32 value);
        partial void OnYearOfAdmissionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_Lawyer_SpecialisationCategoryId", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Lawspot.Backend.FK_Lawyer_SpecialisationCategoryId", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Lawspot.Backend.FK_Lawyer_SpecialisationCategoryId", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Lawspot.Backend.FK_Lawyer_SpecialisationCategoryId", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Lawspot.Backend.FK_Lawyer_SpecialisationCategoryId", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_Lawyer_UserId", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Lawspot.Backend.FK_Lawyer_UserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Lawspot.Backend.FK_Lawyer_UserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Lawspot.Backend.FK_Lawyer_UserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Lawspot.Backend.FK_Lawyer_UserId", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Lawspot.Backend", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="details">Initial value of the Details property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        public static Question CreateQuestion(global::System.String title, global::System.String details, global::System.Int32 categoryId, global::System.DateTime createdOn, global::System.Int32 createdByUserId, global::System.Int32 questionId)
        {
            Question question = new Question();
            question.Title = title;
            question.Details = details;
            question.CategoryId = categoryId;
            question.CreatedOn = createdOn;
            question.CreatedByUserId = createdByUserId;
            question.QuestionId = questionId;
            return question;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                if (_QuestionId != value)
                {
                    OnQuestionIdChanging(value);
                    ReportPropertyChanging("QuestionId");
                    _QuestionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionId");
                    OnQuestionIdChanged();
                }
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_Question_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Lawspot.Backend.FK_Question_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Lawspot.Backend.FK_Question_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Lawspot.Backend.FK_Question_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Lawspot.Backend.FK_Question_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_Question_CreatedByUserId", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Lawspot.Backend.FK_Question_CreatedByUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Lawspot.Backend.FK_Question_CreatedByUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Lawspot.Backend.FK_Question_CreatedByUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Lawspot.Backend.FK_Question_CreatedByUserId", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Lawspot.Backend", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Region CreateRegion(global::System.Int32 regionId, global::System.String name)
        {
            Region region = new Region();
            region.RegionId = regionId;
            region.Name = name;
            return region;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                if (_RegionId != value)
                {
                    OnRegionIdChanging(value);
                    ReportPropertyChanging("RegionId");
                    _RegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionId");
                    OnRegionIdChanged();
                }
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_User_Region", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Lawspot.Backend.FK_User_Region", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Lawspot.Backend.FK_User_Region", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Lawspot.Backend", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String emailAddress, global::System.String password, global::System.Int32 regionId)
        {
            User user = new User();
            user.UserId = userId;
            user.EmailAddress = emailAddress;
            user.Password = password;
            user.RegionId = regionId;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_Lawyer_UserId", "Lawyer")]
        public EntityCollection<Lawyer> Lawyers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lawyer>("Lawspot.Backend.FK_Lawyer_UserId", "Lawyer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lawyer>("Lawspot.Backend.FK_Lawyer_UserId", "Lawyer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_Question_CreatedByUserId", "Question")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("Lawspot.Backend.FK_Question_CreatedByUserId", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("Lawspot.Backend.FK_Question_CreatedByUserId", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Lawspot.Backend", "FK_User_Region", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Lawspot.Backend.FK_User_Region", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Lawspot.Backend.FK_User_Region", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("Lawspot.Backend.FK_User_Region", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("Lawspot.Backend.FK_User_Region", "Region", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
